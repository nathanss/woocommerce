name: 'Test with specific WordPress'
on:
    workflow_call:
        inputs:
            trigger:
                description: 'Type of run to trigger. E.g. daily-e2e, release-checks, etc.'
                required: true
                default: 'default'
                type: string

concurrency:
    group: '${{ github.workflow }}-${{ github.ref }}'
    cancel-in-progress: true
    
env: 
  FORCE_COLOR: 1

jobs:
    project-jobs:
        # Since this is a monorepo, not every pull request or change is going to impact every project.
        # Instead of running CI tasks on all projects indiscriminately, we use a command to detect
        # which projects have changed and what kind of change occurred. This lets us build the
        # matrices that we can use to run CI tasks only on the projects that need them.
        name: 'Build Project Jobs'
        runs-on: 'ubuntu-20.04'
        outputs:
            lint-jobs: ${{ steps.project-jobs.outputs.lint-jobs }}
            test-jobs: ${{ steps.project-jobs.outputs.test-jobs }}
            report-jobs: ${{ steps.project-jobs.outputs.report-jobs }}
        steps:
            - uses: 'actions/checkout@v4'
              name: 'Checkout'
              with:
                  fetch-depth: 0
            - uses: './.github/actions/setup-woocommerce-monorepo'
              name: 'Setup Monorepo'
              with:
                  php-version: false # We don't want to waste time installing PHP since we aren't using it in this job.
            - uses: actions/github-script@v7
              name: 'Build Matrix'
              id: 'project-jobs'
              with:
                  script: |
                      let baseRef = ${{ toJson( github.base_ref ) }};
                      if ( baseRef ) {
                        baseRef = `--base-ref origin/${ baseRef }`;
                      }

                      let githubEvent = ${{ toJson( github.event_name ) }};
                    
                      const refType = ${{ toJson( github.ref_type ) }};
                      const refName = ${{ toJson( github.ref_name ) }};
                    
                      if ( refType === 'tag' && refName !== 'nightly' ) {
                        githubEvent = 'release-checks';
                      }
                    
                      if ( refType === 'tag' && refName === 'nightly' ) {
                        githubEvent = 'nightly-checks';
                      }
                    
                      let trigger = ${{ toJson( inputs.trigger ) }};
                      if ( trigger ) {
                        githubEvent = trigger;
                      }

                      const child_process = require( 'node:child_process' );
                      child_process.execSync( `pnpm utils ci-jobs ${ baseRef } --event ${ githubEvent }` );

    project-test-jobs:
        name: "${{ matrix.name }}"
        runs-on: 'ubuntu-20.04'
        needs: 'project-jobs'
        if: ${{ needs.project-jobs.outputs.test-jobs != '[]' }}
        env: ${{ matrix.testEnv.envVars }}
        strategy:
            fail-fast: false
            matrix:
                include: ${{ fromJSON( needs.project-jobs.outputs.test-jobs ) }}
        steps:
            - uses: 'actions/checkout@v4'
              name: 'Checkout'
              
            - uses: './.github/actions/setup-woocommerce-monorepo'
              name: 'Install Monorepo'
              id: 'install-monorepo'
              with:
                install: '${{ matrix.projectName }}...'
                build: 'false'

            - uses: './.github/actions/setup-woocommerce-monorepo'
              if: ${{ github.ref_type != 'tag' }}
              name: 'Build project'
              id: 'build-project'
              with:
                install: 'false'
                build: ${{ matrix.projectName }}
                  
            - name: 'Update wp-env config'
              if: ${{ github.ref_type == 'tag' }}
              env:
                RELEASE_TAG: ${{ github.ref_name }}
                ARTIFACT_NAME: ${{ github.ref_name == 'nightly' && 'woocommerce-trunk-nightly.zip' || 'woocommerce.zip' }}
              working-directory: ${{ matrix.projectPath }}
              run: node ./tests/e2e-pw/bin/override-wp-env-plugins.js
              
            - name: 'Start Test Environment'
              id: 'prepare-test-environment'
              if: ${{ matrix.testEnv.shouldCreate }}
              env: ${{ matrix.testEnv.envVars }}
              run: 'pnpm --filter="${{ matrix.projectName }}" ${{ matrix.testEnv.start }}'
              
            - name: 'Get commit message'
              id: 'get_commit_message'
              env:
                HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
                PR_TITLE: ${{ github.event.pull_request.title }}
              run: |
                if [[ "${{ github.event_name }}" == "push" ]]; then
                  COMMIT_MESSAGE=`echo "$HEAD_COMMIT_MESSAGE" | head -1`
                elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
                  COMMIT_MESSAGE="$PR_TITLE"
                else
                  COMMIT_MESSAGE="${{ github.event_name }}"
                fi
                echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> "$GITHUB_OUTPUT"
              shell: bash
              
            - name: 'Run tests'
              env:
                BUILDKITE_ANALYTICS_TOKEN: ${{ secrets.BUILDKITE_CORE_E2E_TOKEN }}
                BUILDKITE_ANALYTICS_MESSAGE: ${{ steps.get_commit_message.outputs.COMMIT_MESSAGE }}
                CODEVITALS_PROJECT_TOKEN: ${{ secrets.CODEVITALS_PROJECT_TOKEN }} # required by Metrics tests
              run: 'pnpm --filter="${{ matrix.projectName }}" ${{ matrix.command }}'
              
            - name: 'Resolve artifacts path'
              if: ${{ always() && matrix.report.resultsPath != '' }}
              # Blocks e2e use a relative path which is not supported by actions/upload-artifact@v4
              # https://github.com/actions/upload-artifact/issues/176
              env:
                ARTIFACTS_PATH: '${{ matrix.projectPath }}/${{ matrix.report.resultsPath }}'
              run: echo "ARTIFACTS_PATH=$(realpath $ARTIFACTS_PATH)" >> $GITHUB_ENV
              
            - name: 'Upload artifacts'
              if: ${{ always() && matrix.report.resultsPath != '' }}
              uses: actions/upload-artifact@v4
              with:
                name: '${{ matrix.report.resultsBlobName }}__${{ strategy.job-index }}'
                path: ${{ env.ARTIFACTS_PATH }}
                
            - name: 'Upload flaky test reports'
              uses: actions/upload-artifact@v4
              with:
                name: flaky-tests-${{ strategy.job-index }}
                path: ${{ env.ARTIFACTS_PATH }}/flaky-tests
                if-no-files-found: ignore

            - name: 'Archive metrics results'
              if: ${{ success() && startsWith(matrix.name, 'Metrics') }} # this seems too fragile, we should update the reporting path and use the generic upload step above
              uses: actions/upload-artifact@v4
              env:
                WP_ARTIFACTS_PATH: ${{ github.workspace }}/artifacts
              with:
                name: metrics-results
                path: ${{ env.WP_ARTIFACTS_PATH }}/*.performance-results*.json
